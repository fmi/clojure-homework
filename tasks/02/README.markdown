# Класика и джаз

Хубаво е, когато проблемът е прост, няма частни случаи и кода е лесен и
приятен. Уви, това рядко се случва в практиката. Тази задача ще упражни
справянето с не-толкова-приятните частни случаи.

Ще напишете две функции, с които можем да търсим в музикална колекция.
`(make-collection input)` приема текстов низ, съдържащ музикална колекция във
формата описан по-долу и връща някаква стойност, описваща колекцията. `(search
collection field criteria)` взема колекцията, поле което да върне (например
име на песента, изпълнител или етикети) и критерии за търсене (описани
по-долу) и връща множество от стойностите на поисканите полета.

Свободни сте да изберете каквато искате структура за резултат от
`make-collection` – ние няма да проверяваме какво съдържа, а само ще я
подаваме на `search`. Целта ви трябва да бъда да имплементирате задачата с
най-простия код, а не по най-бързия начин.

## Формат

Колекцията е в следния формат:

    My Favourite Things.          John Coltrane.      Jazz, Bebop.        popular, cover
    Alabama.                      John Coltrane.      Jazz, Avantgarde.
    Boplicity.                    Miles Davis.        Jazz, Bebop
    Autumn Leaves.                Bill Evans.         Jazz.               popular
    Waltz for Debbie.             Bill Evans.         Jazz
    Pathetique.                   Beethoven.          Classical
    Fur Elise.                    Beethoven.          Classical.          popular
    Toccata e Fuga.               Bach.               Classical, Baroque.
    Eine Kleine Nachtmusik.       Mozart.             Classical.          violin, fancy

Форматът представлява следното:

* Всяка песен е на отделен ред.
* Полетата са разделени с точка и нула *(или много)* интервали.
* Има четири полета – име, изпълнител, жанр и етикети.
* Жанра може да има опционален под-жанр, отделен със запетая.
* Една песен може да има нула, един или няколко етикета.
* След точките и запетаите може да има произволно количество интервали.

След обработката на този формат, всяка песен трябва да има следните атрибути:

* `:title` – заглавие на песента, например `"My Favourite Things"`.
* `:artist` – име на изпълнителя, например `"John Coltrane"`.
* `:genre` – име на жанра, например `"Jazz"`.
* `:subgenre` – име на под-жанра, например `"Bebop"`.
* `:tags` – всички етикети, като ключови думи (keywords). Жанра и под-жанра
  трябва да бъдат обърнати до етикети с малки букви. Например, първата песен
  по-горе има етикетите `#{:jazz :bebop :popular :cover}`.

## Търсене

Функцията `search` ни позволява да търсим в колекцията по определени критерии.
Тя намира всички песни, които отговарят на подадените критерии, взема от тях
подадения атрибут и връща множество. Например:

Може да намерим всички изпълнители на джаз песни по следния начин:

    (search collection :artist {:genre "Jazz"})
    ; #{"John Coltrane" "Miles Davis" "Bill Evans"}

Може да намерим всички етикети на песните на Джон Колтрейн по следния начин:

    (search collection :tags {:artist "John Coltrane"})
    ; #{:jazz :bebop :popular :cover :avantgarde}

Обърнете внимание, че етикети на всички намерени песни са обединени в едно
множество.

## Критерии за търсене

Последния аргумент на `search` може да бъде следните неща:

* **map** – всяко поле от map-а се съпоставя на съответния атрибут в песента.
  `{:artist "John Coltrane", :subgenre "Bebop"}` намира всички бибоп песни на
  Джон Колтрейн
* `{:tag :foo}` – ако мап-а има ключ `:tag`, то той съвпада с всички песни,
  имащи този етикет. Например `{:genre "Classical" :tag :popular}` намира
  всички популярни класически "песни".
* `[:and crit1 crit2 ...]` – ако е вектор, чиято първа стойност е `:and`, то
  критерия отговаря на всички песни, отговарящи на всички критерии `crit1`,
  `crit2`, и т.н. Например `[:and {:tag :popular} {:tag :cover} {:tag :jazz}]`
  намира всички популярни джаз кавъри.
* `[:or crit1 crit2 ...]` ─ всички песни, които отговарят на поне един
  критерий. Аналогично на предишното.
* `[:not criteria]` – съвпада с песен, която не отговаря на подадения
  критерий. Например `[:not {:tag :cover}]` ще търси всички песни, които не са
  кавъри.

Горните критерии могат да се влагат. Например:

    (search collection :title [:and {:genre "Jazz"}
                                    [:not {:title "My Favourite Things"}]
                                    [:or {:tag :popular} {:tag :bebop}]])
    ; #{"Autumn Leaves" "Boplicity"}

## Бележки

* Свободни сте да си дефинирате помощни функции, имена и каквото още поискате.
* Може да използвате каквито модули си харесате в стандартната библиотека.
  Препоръчваме `clojure.string`.
* [Clojure cheatsheet][cheatsheet] е ваш приятел.
* **Пуснете си примерния тест**. Целта му е да провери, че системата ни за
  проверка се справя с вашето решение. Ако има грешка при неговото изпълнение,
  ще има грешка и при проверката, в резултат на което е вероятно да имате 0
  точки.

[cheatsheet]: http://clojure.org/cheatsheet
