# Мързеливизация

Дефинирайте макроса `lazyfy`, който приема един или повече израза и връща
мързелива колекция от стойносите, на които се оценяват тези изрази. Оценяването
на изразите трябва да се извършва мързеливо, при реализацията на колекцията,
като се оценяват само тези изрази, които [използваме](http://fmi.clojure.bg/topics/179).

```clojure
(let [coll (lazyfy
            (prn 1)
            (prn 2)
            (prn 3))]
  (realized? coll) ; false
  (first coll)     ; Output: 1
  (second coll)    ; Output: 2
  (nth coll 2)     ; Output: 3
  coll             ; (nil nil nil)
)
```

Няма ограничения за изразите, които можем да подаваме на `lazyfy`:

```clojure
(lazyfy
 (+ 1 2 3)
 (let [x 10] (prn x) (* x x))
 (- (fn [] -10)))
```
